Object.defineProperty(exports, "__esModule", {
  value: true
});
var validator = function () {
  function nonNegativeInteger(props, propName, componentName) {
    var value = props[propName];

    if (value == null || Number.isInteger(value) && value >= 0 && !Object.is(value, -0)) {
      return null;
    }

    return new RangeError(String(propName) + " in " + String(componentName) + " must be a non-negative integer");
  }

  return nonNegativeInteger;
}();

function requiredNonNegativeInteger(props, propName, componentName) {
  var value = props[propName];
  if (value == null) {
    return new RangeError(String(propName) + " in " + String(componentName) + " must be a non-negative integer");
  }

  for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    rest[_key - 3] = arguments[_key];
  }

  return validator.apply(undefined, [props, propName, componentName].concat(rest));
}

validator.isRequired = requiredNonNegativeInteger;

exports["default"] = validator;