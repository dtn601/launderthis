Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports['default'] = withShape;

var _and = require('./and');

var _and2 = _interopRequireDefault(_and);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function withShape(type, shapeTypes) {
  if (typeof type !== 'function') {
    throw new TypeError('type must be a valid PropType');
  }
  if (!shapeTypes || Array.isArray(shapeTypes) || (typeof shapeTypes === 'undefined' ? 'undefined' : _typeof(shapeTypes)) !== 'object') {
    throw new TypeError('shape must be a normal object');
  }
  return (0, _and2['default'])([type, function () {
    function universalShape(props, propName, componentName, location) {
      var propValue = props[propName];
      if (propValue == null) {
        return null;
      }
      // code adapted from PropTypes.shape: https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L381
      // eslint-disable-next-line guard-for-in, no-restricted-syntax

      for (var _len = arguments.length, rest = Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (checker) {
          var error = checker.apply(undefined, [propValue, key, componentName, location].concat(rest));
          if (error) {
            return error;
          }
        }
      }
      return null;
    }

    return universalShape;
  }()], 'withShape');
}